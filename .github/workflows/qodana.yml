name: Qodana (Ubuntu)

env:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"

  FAIL_END: "--fail-at-end"

  FAIL_NEVER: "--fail-never"

  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

  # Test visualization should be disabled in CI (headless) mode.
  TSDL_SKIP_TEST_VISUALIZATION: true

# run qodana on main branch as well as on pull requests
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  qodana:
    if: ${{ false }} # TODO enable as soon as setup complete
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # required by Codana, see docs

      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: 18
          distribution: 'adopt'
          cache: 'maven' # see also https://github.com/actions/setup-java#caching-packages-dependencies

      # Even though setup-java already offers the ability to run maven builds, using the included
      # Maven wrapper with fixed version ensures a uniform build process across multiple tools
      - name: Make Maven Wrapper Executable
        run: |
          chmod +x mvnw

      - name: ANTLR Generate
        run: |
          ./mvnw $MAVEN_CLI_OPTS $FAIL_END clean package -DskipTests

      - name: Qodana JDK Fix
        run: |
          mkdir ./.idea
          touch ./.idea/misc.xml
          echo '<?xml version="1.0" encoding="UTF-8"?>' >> ./.idea/misc.xml
          echo '<project version="4">' >> ./.idea/misc.xml
          echo '  <component name="ExternalStorageConfigurationManager" enabled="true" />' >> ./.idea/misc.xml
          echo '  <component name="FrameworkDetectionExcludesConfiguration">' >> ./.idea/misc.xml
          echo '    <file type="web" url="file://$PROJECT_DIR$" />' >> ./.idea/misc.xml
          echo '  </component>' >> ./.idea/misc.xml
          echo '  <component name="ProjectRootManager" version="2" languageLevel="JDK_18_PREVIEW" project-jdk-name="18" project-jdk-type="JavaSDK">' >> ./.idea/misc.xml
          echo '    <output url="file://$PROJECT_DIR$/out" />' >> ./.idea/misc.xml
          echo '  </component>' >> ./.idea/misc.xml
          echo '</project>' >> ./.idea/misc.xml

      - name: Qodana Scan
        uses: JetBrains/qodana-action@v2022.2.1

      - name: Deploy to GitHub Pages
        if: ${{ false }} # TODO does not quite work yet # github.ref == 'refs/heads/main' # deploy only if on main branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ runner.temp }}/qodana/results/report
          destination_dir: ./
